#!/usr/bin/env bash

#colors
#bold="(tput bold)"
magenta="\033[1;35m"
green="\033[1;32m"
white="\033[1;37m"
blue="\033[1;34m"
red="\033[1;31m"
black="\033[1;40;30m"
yellow="\033[1;33m"
cyan="\033[1;36m"
reset="\033[0m"
bgyellow="\033[1;43;33m"
bgwhite="\033[1;47;37m"
c0="${reset}"
c1="${magenta}"
c2="${green}"
c3="${white}"
c4="${blue}"
c5="${red}"
c6="${yellow}"
c7="${cyan}"
c8="${black}"
c9="${bgyellow}"
c10="${bgwhite}"

#getting the init
get_init() {
    os="$(uname -o)"
    if [[ "$os" = "Android" ]]; then
       echo "init.rc"
    elif [[ ! $(pidof systemd) ]]; then
        if [[ -f "/sbin/openrc" ]]; then
            echo "openrc"
        else
         echo $(cat /proc/1/comm)
        fi
    else
        echo "systemD"
    fi
}

#get total packages
net_pkg() {
    pack="$(which {xbps-install,apk,apt,pacman,nix,dnf,rpm,dpkg,emerge} 2>/dev/null | grep -v "not found" | awk -F/ 'NR==1{print $NF}')"
  case "${pack}" in
      "xbps-install")
	 total=$(xbps-query -l | wc -l)
	 ;;
      "apk")
	 total=$(apk search | wc -l)
	 ;;
      "apt")
	 total=$(apt list --installed 2>/dev/null | wc -l)
	 ;;
      "pacman")
	 total=$(pacman -Q | wc -l)
	 ;;
      "nix")
	 total=$(nix-env -qa --installed "*" | wc -l)
	 ;;
      "dnf")
	 total=$(dnf list installed | wc -l)
	 ;;
      "rpm")
	 total=$(rpm -qa | wc -l)
	 ;;
      "emerge")
	 total=$(qlist -I | wc -l)
	 ;;
#      "dpkg")
#	 total=$(dpkg-query -l | wc -l)
#	 ;;
      "")
	 total="Unknown"
	 ;;
  esac

  echo $total
}

# check distro info for counting n.o of packages accordingly
distro_detect() {
    os="$(uname -o)"
    case "${os}" in
	Android)
	   distro="Android"
	   if [ ! -f "${HOME}"/.termux/fonts/Material.ttf ];then
		cp fonts/* "${HOME}"/.termux/fonts/
		termux-reload-settings
	   fi
	   ;;
	*)
	   distro="$(source /etc/os-release && echo "${PRETTY_NAME}")"
       if [ ! -d $HOME/.local/share/fonts ]; then
        mkdir -p $HOME/.local/share/fonts
       fi
	   if [ ! -f $HOME/.local/share/fonts/Material.ttf ] && [ ! -f /usr/share/fonts/Material.ttf ]; then
		cp -r ttf-material-design-icons/* $HOME/.local/share/fonts
		fc-cache -vf &>/dev/null
	   fi
	   ;;
    esac
}

# Get Memory usage
get_mem () {
  free --mega | sed -n -E '2s/^[^0-9]*([0-9]+) *([0-9]+).*/'"${space}"'\2 \/ \1 MB/p'
}

# Get Username
get_user() {
  user=$(whoami)
}

# Get Node Name
get_node_name() {
  node_name=$(uname -n)
}

get_color() {
  black='[30m'
  red='[31m'
  green='[32m'
  yellow='[33m'
  blue='[34m'
  magenta='[35m'
  cyan='[36m'
  white='[37m'
  grey='[90m'
  reset='[0m'
}

get_music() {
  title=$(mpc --host=127.0.0.1 --port=8000 --format '[%title%]' current 2> /dev/null)
  artist=$(mpc --host=127.0.0.1 --port=8000 --format '[%artist%]' current 2> /dev/null)
}

# fetch output
distro_detect
get_user
get_color
get_music
get_node_name
echo -e "\n                xzrie${c5}@${c3}system-android-chan ${c5}ïŸ”${c3}\n"
echo -e "               ${c2}ï”±${c3} : ${distro} $(uname -m)"
echo -e "               ${c5}ï…¼${c3} : $(uname -r)"
echo -e "               ${c6}ï’‡${c3} : $(net_pkg) Packages"
echo -e "     ${c3}â€¢${c8}_${c3}â€¢${c0}       ${c5}ï’‰${c3} : $(basename "${SHELL}")"
echo -e "     ${c8}${c0}${c9}oo${c0}${c8}|${c0}       ${c6}ï¡š${c3} : $(get_mem)"
echo -e "    ${c8}/${c0}${c10}â€‚${c0}${c8}'\'${c0}      ${c7}ï€—${c3} :$(uptime -p | sed 's/up//')"
echo -e "   ${c9}(${c0}${c8}\_;/${c0}${c9})${c0}      ${c1}ï¢†${c3} : $artist - $title"
echo -e "               ${c6}ïŸ‰${c3} : $(bash $HOME/.scripts/fetch.sh storage)"
echo -e "               $(bash $HOME/.scripts/fetch.sh battery)"
echo -e "
               ${black}â–ˆâ–ˆ${red}â–ˆâ–ˆ${green}â–ˆâ–ˆ${yellow}â–ˆâ–ˆ${blue}â–ˆâ–ˆ${magenta}â–ˆâ–ˆ${cyan}â–ˆâ–ˆ${white}â–ˆâ–ˆ${reset}\n"
